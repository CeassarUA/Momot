<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="laba1databaseDataSet1" targetNamespace="http://tempuri.org/laba1databaseDataSet1.xsd" xmlns:mstns="http://tempuri.org/laba1databaseDataSet1.xsd" xmlns="http://tempuri.org/laba1databaseDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="laba1databaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="laba1databaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.laba1momot.Properties.Settings.GlobalReference.Default.laba1databaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CountryTableAdapter" GeneratorDataComponentClassName="CountryTableAdapter" Name="Country" UserDataComponentName="CountryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="laba1databaseConnectionString (Settings)" DbObjectName="dbo.Country" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Country] WHERE (([CountryId] = @Original_CountryId) AND ([CountryName] = @Original_CountryName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Country] ([CountryId], [CountryName]) VALUES (@CountryId, @CountryName);
SELECT CountryId, CountryName FROM Country WHERE (CountryId = @CountryId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CountryId, CountryName FROM dbo.Country</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Country] SET [CountryId] = @CountryId, [CountryName] = @CountryName WHERE (([CountryId] = @Original_CountryId) AND ([CountryName] = @Original_CountryName));
SELECT CountryId, CountryName FROM Country WHERE (CountryId = @CountryId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CountryId" DataSetColumn="CountryId" />
              <Mapping SourceColumn="CountryName" DataSetColumn="CountryName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EventsTableAdapter" GeneratorDataComponentClassName="EventsTableAdapter" Name="Events" UserDataComponentName="EventsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="laba1databaseConnectionString (Settings)" DbObjectName="dbo.Events" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Events] WHERE (([EventsId] = @Original_EventsId) AND ([EventsName] = @Original_EventsName) AND ((@IsNull_VenuesId = 1 AND [VenuesId] IS NULL) OR ([VenuesId] = @Original_VenuesId)) AND ((@IsNull_VenuesName = 1 AND [VenuesName] IS NULL) OR ([VenuesName] = @Original_VenuesName)) AND ((@IsNull_CountryId = 1 AND [CountryId] IS NULL) OR ([CountryId] = @Original_CountryId)) AND ((@IsNull_CountryName = 1 AND [CountryName] IS NULL) OR ([CountryName] = @Original_CountryName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventsId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventsId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventsName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventsName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VenuesName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_VenuesName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CountryName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Events] ([EventsId], [EventsName], [VenuesId], [VenuesName], [CountryId], [CountryName]) VALUES (@EventsId, @EventsName, @VenuesId, @VenuesName, @CountryId, @CountryName);
SELECT EventsId, EventsName, VenuesId, VenuesName, CountryId, CountryName FROM Events WHERE (EventsId = @EventsId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventsId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventsId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventsName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventsName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@VenuesName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EventsId, EventsName, VenuesId, VenuesName, CountryId, CountryName FROM dbo.Events</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Events] SET [EventsId] = @EventsId, [EventsName] = @EventsName, [VenuesId] = @VenuesId, [VenuesName] = @VenuesName, [CountryId] = @CountryId, [CountryName] = @CountryName WHERE (([EventsId] = @Original_EventsId) AND ([EventsName] = @Original_EventsName) AND ((@IsNull_VenuesId = 1 AND [VenuesId] IS NULL) OR ([VenuesId] = @Original_VenuesId)) AND ((@IsNull_VenuesName = 1 AND [VenuesName] IS NULL) OR ([VenuesName] = @Original_VenuesName)) AND ((@IsNull_CountryId = 1 AND [CountryId] IS NULL) OR ([CountryId] = @Original_CountryId)) AND ((@IsNull_CountryName = 1 AND [CountryName] IS NULL) OR ([CountryName] = @Original_CountryName)));
SELECT EventsId, EventsName, VenuesId, VenuesName, CountryId, CountryName FROM Events WHERE (EventsId = @EventsId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventsId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventsId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventsName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventsName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@VenuesName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventsId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventsId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventsName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventsName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VenuesName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_VenuesName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CountryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CountryName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CountryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EventsId" DataSetColumn="EventsId" />
              <Mapping SourceColumn="EventsName" DataSetColumn="EventsName" />
              <Mapping SourceColumn="VenuesId" DataSetColumn="VenuesId" />
              <Mapping SourceColumn="VenuesName" DataSetColumn="VenuesName" />
              <Mapping SourceColumn="CountryId" DataSetColumn="CountryId" />
              <Mapping SourceColumn="CountryName" DataSetColumn="CountryName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VenuesTableAdapter" GeneratorDataComponentClassName="VenuesTableAdapter" Name="Venues" UserDataComponentName="VenuesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="laba1databaseConnectionString (Settings)" DbObjectName="dbo.Venues" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Venues] WHERE (([VenuesId] = @Original_VenuesId) AND ([VenuesName] = @Original_VenuesName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_VenuesName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Venues] ([VenuesId], [VenuesName]) VALUES (@VenuesId, @VenuesName);
SELECT VenuesId, VenuesName FROM Venues WHERE (VenuesId = @VenuesId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@VenuesName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT VenuesId, VenuesName FROM dbo.Venues</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Venues] SET [VenuesId] = @VenuesId, [VenuesName] = @VenuesName WHERE (([VenuesId] = @Original_VenuesId) AND ([VenuesName] = @Original_VenuesName));
SELECT VenuesId, VenuesName FROM Venues WHERE (VenuesId = @VenuesId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@VenuesName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VenuesId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VenuesId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_VenuesName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="VenuesName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VenuesId" DataSetColumn="VenuesId" />
              <Mapping SourceColumn="VenuesName" DataSetColumn="VenuesName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="laba1databaseDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="laba1databaseDataSet1" msprop:Generator_UserDSName="laba1databaseDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Country" msprop:Generator_TableClassName="CountryDataTable" msprop:Generator_TableVarName="tableCountry" msprop:Generator_RowChangedName="CountryRowChanged" msprop:Generator_TablePropName="Country" msprop:Generator_RowDeletingName="CountryRowDeleting" msprop:Generator_RowChangingName="CountryRowChanging" msprop:Generator_RowEvHandlerName="CountryRowChangeEventHandler" msprop:Generator_RowDeletedName="CountryRowDeleted" msprop:Generator_RowClassName="CountryRow" msprop:Generator_UserTableName="Country" msprop:Generator_RowEvArgName="CountryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CountryId" msprop:Generator_ColumnVarNameInTable="columnCountryId" msprop:Generator_ColumnPropNameInRow="CountryId" msprop:Generator_ColumnPropNameInTable="CountryIdColumn" msprop:Generator_UserColumnName="CountryId" type="xs:int" />
              <xs:element name="CountryName" msprop:Generator_ColumnVarNameInTable="columnCountryName" msprop:Generator_ColumnPropNameInRow="CountryName" msprop:Generator_ColumnPropNameInTable="CountryNameColumn" msprop:Generator_UserColumnName="CountryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Events" msprop:Generator_TableClassName="EventsDataTable" msprop:Generator_TableVarName="tableEvents" msprop:Generator_RowChangedName="EventsRowChanged" msprop:Generator_TablePropName="Events" msprop:Generator_RowDeletingName="EventsRowDeleting" msprop:Generator_RowChangingName="EventsRowChanging" msprop:Generator_RowEvHandlerName="EventsRowChangeEventHandler" msprop:Generator_RowDeletedName="EventsRowDeleted" msprop:Generator_RowClassName="EventsRow" msprop:Generator_UserTableName="Events" msprop:Generator_RowEvArgName="EventsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EventsId" msprop:Generator_ColumnVarNameInTable="columnEventsId" msprop:Generator_ColumnPropNameInRow="EventsId" msprop:Generator_ColumnPropNameInTable="EventsIdColumn" msprop:Generator_UserColumnName="EventsId" type="xs:int" />
              <xs:element name="EventsName" msprop:Generator_ColumnVarNameInTable="columnEventsName" msprop:Generator_ColumnPropNameInRow="EventsName" msprop:Generator_ColumnPropNameInTable="EventsNameColumn" msprop:Generator_UserColumnName="EventsName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="VenuesId" msprop:Generator_ColumnVarNameInTable="columnVenuesId" msprop:Generator_ColumnPropNameInRow="VenuesId" msprop:Generator_ColumnPropNameInTable="VenuesIdColumn" msprop:Generator_UserColumnName="VenuesId" type="xs:int" minOccurs="0" />
              <xs:element name="VenuesName" msprop:Generator_ColumnVarNameInTable="columnVenuesName" msprop:Generator_ColumnPropNameInRow="VenuesName" msprop:Generator_ColumnPropNameInTable="VenuesNameColumn" msprop:Generator_UserColumnName="VenuesName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CountryId" msprop:Generator_ColumnVarNameInTable="columnCountryId" msprop:Generator_ColumnPropNameInRow="CountryId" msprop:Generator_ColumnPropNameInTable="CountryIdColumn" msprop:Generator_UserColumnName="CountryId" type="xs:int" minOccurs="0" />
              <xs:element name="CountryName" msprop:Generator_ColumnVarNameInTable="columnCountryName" msprop:Generator_ColumnPropNameInRow="CountryName" msprop:Generator_ColumnPropNameInTable="CountryNameColumn" msprop:Generator_UserColumnName="CountryName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Venues" msprop:Generator_TableClassName="VenuesDataTable" msprop:Generator_TableVarName="tableVenues" msprop:Generator_RowChangedName="VenuesRowChanged" msprop:Generator_TablePropName="Venues" msprop:Generator_RowDeletingName="VenuesRowDeleting" msprop:Generator_RowChangingName="VenuesRowChanging" msprop:Generator_RowEvHandlerName="VenuesRowChangeEventHandler" msprop:Generator_RowDeletedName="VenuesRowDeleted" msprop:Generator_RowClassName="VenuesRow" msprop:Generator_UserTableName="Venues" msprop:Generator_RowEvArgName="VenuesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VenuesId" msprop:Generator_ColumnVarNameInTable="columnVenuesId" msprop:Generator_ColumnPropNameInRow="VenuesId" msprop:Generator_ColumnPropNameInTable="VenuesIdColumn" msprop:Generator_UserColumnName="VenuesId" type="xs:int" />
              <xs:element name="VenuesName" msprop:Generator_ColumnVarNameInTable="columnVenuesName" msprop:Generator_ColumnPropNameInRow="VenuesName" msprop:Generator_ColumnPropNameInTable="VenuesNameColumn" msprop:Generator_UserColumnName="VenuesName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Country" />
      <xs:field xpath="mstns:CountryId" />
    </xs:unique>
    <xs:unique name="CountryKey1">
      <xs:selector xpath=".//mstns:Country" />
      <xs:field xpath="mstns:CountryName" />
    </xs:unique>
    <xs:unique name="Events_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Events" />
      <xs:field xpath="mstns:EventsId" />
    </xs:unique>
    <xs:unique name="Venues_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Venues" />
      <xs:field xpath="mstns:VenuesId" />
    </xs:unique>
    <xs:unique name="VenuesKey1">
      <xs:selector xpath=".//mstns:Venues" />
      <xs:field xpath="mstns:VenuesName" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="Venues_Events" msdata:parent="Venues" msdata:child="Events" msdata:parentkey="VenuesName" msdata:childkey="VenuesName" msprop:Generator_UserChildTable="Events" msprop:Generator_ChildPropName="GetEventsRowsByVenues_Events" msprop:Generator_UserRelationName="Venues_Events" msprop:Generator_RelationVarName="relationVenues_Events" msprop:Generator_UserParentTable="Venues" msprop:Generator_ParentPropName="VenuesRowByVenues_Events" />
      <msdata:Relationship name="Country_Events" msdata:parent="Country" msdata:child="Events" msdata:parentkey="CountryName" msdata:childkey="CountryName" msprop:Generator_UserChildTable="Events" msprop:Generator_ChildPropName="GetEventsRowsByCountry_Events" msprop:Generator_UserRelationName="Country_Events" msprop:Generator_ParentPropName="CountryRowByCountry_Events" msprop:Generator_RelationVarName="relationCountry_Events" msprop:Generator_UserParentTable="Country" />
      <msdata:Relationship name="Venues_Events1" msdata:parent="Venues" msdata:child="Events" msdata:parentkey="VenuesId" msdata:childkey="VenuesId" msprop:Generator_UserChildTable="Events" msprop:Generator_ChildPropName="GetEventsRowsByVenues_Events1" msprop:Generator_UserRelationName="Venues_Events1" msprop:Generator_RelationVarName="relationVenues_Events1" msprop:Generator_UserParentTable="Venues" msprop:Generator_ParentPropName="VenuesRowByVenues_Events1" />
      <msdata:Relationship name="Country_Events1" msdata:parent="Country" msdata:child="Events" msdata:parentkey="CountryId" msdata:childkey="CountryId" msprop:Generator_UserChildTable="Events" msprop:Generator_ChildPropName="GetEventsRowsByCountry_Events1" msprop:Generator_UserRelationName="Country_Events1" msprop:Generator_ParentPropName="CountryRowByCountry_Events1" msprop:Generator_RelationVarName="relationCountry_Events1" msprop:Generator_UserParentTable="Country" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>